# -*- coding: utf-8 -*-
"""helping_function.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/boradj/machine-learning/blob/main/extra/helping_function.ipynb
"""

from sklearn.metrics import accuracy_score, precision_recall_fscore_support

def calculate_results(y_true, y_pred):
  '''
  function is to calcualate model accuracy, precision, recall and f1 score for binary classification model.
  
  Args:
  ---
  y_true :- true label in the form of a 1D array
  y_pred :- predicted labels(1D array)

  '''
  #model accuracy
  model_accuracy = accuracy_score(y_true, y_pred)*100

  # using weighted average calcualting model precision, recall and f1 score.
  model_precision, model_recall, model_f1, _ = precision_recall_fscore_support(y_true, y_pred, average="weighted")

  model_results = {"accuracy" :- model_accuracy,
                   "precision" :- model_precision,
                   "recall" :- model_recall,
                   "f1" :- model_f1}
  return model_results

# comparing two different model result
def compare_result(model_1_result, model_2_result):
  for key, values in model_1_result.items:
    print(f"model_1{key} : {values:.2f}, model_2{key} : {model_2_result[key]:.2f}, Difference : {model_2_result[key] - values:.2f} ")